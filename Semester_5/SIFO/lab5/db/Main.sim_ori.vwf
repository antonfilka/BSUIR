/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("REQ")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("REQ[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "REQ";
}

SIGNAL("REQ[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "REQ";
}

SIGNAL("REQ[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "REQ";
}

SIGNAL("REQ[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "REQ";
}

SIGNAL("S1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("S1[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S1";
}

SIGNAL("S1[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S1";
}

SIGNAL("S1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S1";
}

SIGNAL("S1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S1";
}

SIGNAL("S1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S1";
}

SIGNAL("S1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S1";
}

SIGNAL("S1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S1";
}

SIGNAL("S1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S1";
}

SIGNAL("S2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("S2[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S2";
}

SIGNAL("S2[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S2";
}

SIGNAL("S2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S2";
}

SIGNAL("S2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S2";
}

SIGNAL("S2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S2";
}

SIGNAL("S2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S2";
}

SIGNAL("S2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S2";
}

SIGNAL("S2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S2";
}

SIGNAL("S3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("S3[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S3";
}

SIGNAL("S3[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S3";
}

SIGNAL("S3[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S3";
}

SIGNAL("S3[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S3";
}

SIGNAL("S3[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S3";
}

SIGNAL("S3[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S3";
}

SIGNAL("S3[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S3";
}

SIGNAL("S3[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S3";
}

SIGNAL("S4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("S4[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S4";
}

SIGNAL("S4[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S4";
}

SIGNAL("S4[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S4";
}

SIGNAL("S4[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S4";
}

SIGNAL("S4[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S4";
}

SIGNAL("S4[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S4";
}

SIGNAL("S4[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S4";
}

SIGNAL("S4[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S4";
}

SIGNAL("data")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("data[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data";
}

SIGNAL("data[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data";
}

SIGNAL("data[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data";
}

SIGNAL("data[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data";
}

SIGNAL("data[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data";
}

SIGNAL("data[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data";
}

SIGNAL("data[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data";
}

SIGNAL("data[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data";
}

SIGNAL("MSYN")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("SSYN")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("M_REQ")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("M_REQ[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "M_REQ";
}

SIGNAL("M_REQ[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "M_REQ";
}

SIGNAL("M_REQ[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "M_REQ";
}

SIGNAL("M_REQ[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "M_REQ";
}

SIGNAL("perm")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("perm[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "perm";
}

SIGNAL("perm[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "perm";
}

SIGNAL("perm[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "perm";
}

SIGNAL("perm[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "perm";
}

SIGNAL("M_END")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("address[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("address[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("address[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("S5")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("S5[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S5";
}

SIGNAL("S5[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S5";
}

SIGNAL("S5[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S5";
}

SIGNAL("S5[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S5";
}

SIGNAL("S5[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S5";
}

SIGNAL("S5[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S5";
}

SIGNAL("S5[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S5";
}

SIGNAL("S5[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S5";
}

SIGNAL("Slave_add")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Slave_add[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Slave_add";
}

SIGNAL("Slave_add[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Slave_add";
}

SIGNAL("Slave_add[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Slave_add";
}

GROUP("address")
{
	MEMBERS = "address[2]", "address[1]", "address[0]";
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 100;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
	}
}

TRANSITION_LIST("REQ[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 390.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 240.0;
	}
}

TRANSITION_LIST("REQ[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 390.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 560.0;
	}
}

TRANSITION_LIST("REQ[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 390.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 560.0;
	}
}

TRANSITION_LIST("REQ[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 390.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 240.0;
	}
}

TRANSITION_LIST("S1[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 935.0;
	}
}

TRANSITION_LIST("S1[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 935.0;
	}
}

TRANSITION_LIST("S1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 935.0;
	}
}

TRANSITION_LIST("S1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 935.0;
	}
}

TRANSITION_LIST("S1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 935.0;
	}
}

TRANSITION_LIST("S1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 935.0;
	}
}

TRANSITION_LIST("S1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 935.0;
	}
}

TRANSITION_LIST("S1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 35.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 935.0;
	}
}

TRANSITION_LIST("S2[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 75.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 360.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 485.0;
	}
}

TRANSITION_LIST("S2[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 75.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 360.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 485.0;
	}
}

TRANSITION_LIST("S2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 75.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 360.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 485.0;
	}
}

TRANSITION_LIST("S2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 75.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 360.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 485.0;
	}
}

TRANSITION_LIST("S2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 75.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 360.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 485.0;
	}
}

TRANSITION_LIST("S2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 75.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 360.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 485.0;
	}
}

TRANSITION_LIST("S2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 75.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 360.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 485.0;
	}
}

TRANSITION_LIST("S2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 75.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 360.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 485.0;
	}
}

TRANSITION_LIST("S3[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 125.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 350.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 425.0;
	}
}

TRANSITION_LIST("S3[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 125.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 350.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 425.0;
	}
}

TRANSITION_LIST("S3[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 125.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 350.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 425.0;
	}
}

TRANSITION_LIST("S3[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 125.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 350.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 425.0;
	}
}

TRANSITION_LIST("S3[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 125.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 350.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 425.0;
	}
}

TRANSITION_LIST("S3[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 125.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 350.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 425.0;
	}
}

TRANSITION_LIST("S3[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 125.0;
		LEVEL 1 FOR 50.0;
		LEVEL Z FOR 350.0;
		LEVEL 1 FOR 50.0;
		LEVEL Z FOR 425.0;
	}
}

TRANSITION_LIST("S3[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 125.0;
		LEVEL 1 FOR 50.0;
		LEVEL Z FOR 350.0;
		LEVEL 1 FOR 50.0;
		LEVEL Z FOR 425.0;
	}
}

TRANSITION_LIST("S4[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 185.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 340.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 355.0;
	}
}

TRANSITION_LIST("S4[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 185.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 340.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 355.0;
	}
}

TRANSITION_LIST("S4[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 185.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 340.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 355.0;
	}
}

TRANSITION_LIST("S4[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 185.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 340.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 355.0;
	}
}

TRANSITION_LIST("S4[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 185.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 340.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 355.0;
	}
}

TRANSITION_LIST("S4[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 185.0;
		LEVEL 1 FOR 60.0;
		LEVEL Z FOR 340.0;
		LEVEL 1 FOR 60.0;
		LEVEL Z FOR 355.0;
	}
}

TRANSITION_LIST("S4[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 185.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 340.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 355.0;
	}
}

TRANSITION_LIST("S4[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 185.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 340.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 355.0;
	}
}

TRANSITION_LIST("data[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 190.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 355.0;
	}
}

TRANSITION_LIST("data[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 190.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 355.0;
	}
}

TRANSITION_LIST("data[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 190.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 355.0;
	}
}

TRANSITION_LIST("data[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 190.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 355.0;
	}
}

TRANSITION_LIST("data[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 190.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 355.0;
	}
}

TRANSITION_LIST("data[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 60.0;
		LEVEL Z FOR 190.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 60.0;
		LEVEL Z FOR 355.0;
	}
}

TRANSITION_LIST("data[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 190.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 355.0;
	}
}

TRANSITION_LIST("data[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 35.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 190.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 355.0;
	}
}

TRANSITION_LIST("MSYN")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 190.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 355.0;
	}
}

TRANSITION_LIST("SSYN")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 190.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 355.0;
	}
}

TRANSITION_LIST("M_REQ[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 210.0;
		LEVEL 0 FOR 190.0;
		LEVEL 1 FOR 210.0;
		LEVEL 0 FOR 355.0;
	}
}

TRANSITION_LIST("M_REQ[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 425.0;
	}
}

TRANSITION_LIST("M_REQ[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 485.0;
	}
}

TRANSITION_LIST("M_REQ[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 370.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 535.0;
	}
}

TRANSITION_LIST("perm[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 185.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 340.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 355.0;
	}
}

TRANSITION_LIST("perm[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 125.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 350.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 425.0;
	}
}

TRANSITION_LIST("perm[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 360.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 485.0;
	}
}

TRANSITION_LIST("perm[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 370.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 535.0;
	}
}

TRANSITION_LIST("M_END")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 65.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 210.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 345.0;
	}
}

TRANSITION_LIST("address[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 190.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 355.0;
	}
}

TRANSITION_LIST("address[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 60.0;
		LEVEL Z FOR 190.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 60.0;
		LEVEL Z FOR 355.0;
	}
}

TRANSITION_LIST("address[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 60.0;
		LEVEL Z FOR 190.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 60.0;
		LEVEL Z FOR 355.0;
	}
}

TRANSITION_LIST("S5[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 435.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 535.0;
	}
}

TRANSITION_LIST("S5[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 435.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 535.0;
	}
}

TRANSITION_LIST("S5[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 435.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 535.0;
	}
}

TRANSITION_LIST("S5[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 435.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 535.0;
	}
}

TRANSITION_LIST("S5[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 435.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 535.0;
	}
}

TRANSITION_LIST("S5[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 435.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 535.0;
	}
}

TRANSITION_LIST("S5[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 435.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 535.0;
	}
}

TRANSITION_LIST("S5[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 435.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 535.0;
	}
}

TRANSITION_LIST("Slave_add[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 380.0;
		LEVEL 1 FOR 510.0;
		LEVEL 0 FOR 110.0;
	}
}

TRANSITION_LIST("Slave_add[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("Slave_add[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "REQ";
	EXPAND_STATUS = EXPANDED;
	RADIX = ASCII;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5;
}

DISPLAY_LINE
{
	CHANNEL = "REQ[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "REQ[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "REQ[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "REQ[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "S1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
	CHILDREN = 7, 8, 9, 10, 11, 12, 13, 14;
}

DISPLAY_LINE
{
	CHANNEL = "S1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "S1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "S1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "S1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "S1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "S1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "S1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "S1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "S2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 15;
	TREE_LEVEL = 0;
	CHILDREN = 16, 17, 18, 19, 20, 21, 22, 23;
}

DISPLAY_LINE
{
	CHANNEL = "S2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "S2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "S2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "S2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "S2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "S2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "S2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "S2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "S3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 24;
	TREE_LEVEL = 0;
	CHILDREN = 25, 26, 27, 28, 29, 30, 31, 32;
}

DISPLAY_LINE
{
	CHANNEL = "S3[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "S3[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "S3[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "S3[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "S3[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "S3[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "S3[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "S3[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "S4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 33;
	TREE_LEVEL = 0;
	CHILDREN = 34, 35, 36, 37, 38, 39, 40, 41;
}

DISPLAY_LINE
{
	CHANNEL = "S4[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "S4[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "S4[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "S4[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "S4[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "S4[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "S4[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "S4[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 33;
}

DISPLAY_LINE
{
	CHANNEL = "S5";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 42;
	TREE_LEVEL = 0;
	CHILDREN = 43, 44, 45, 46, 47, 48, 49, 50;
}

DISPLAY_LINE
{
	CHANNEL = "S5[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "S5[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "S5[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "S5[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "S5[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "S5[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "S5[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "S5[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "address";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 51;
	TREE_LEVEL = 0;
	CHILDREN = 52, 53, 54;
}

DISPLAY_LINE
{
	CHANNEL = "address[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 51;
}

DISPLAY_LINE
{
	CHANNEL = "address[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 51;
}

DISPLAY_LINE
{
	CHANNEL = "address[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 51;
}

DISPLAY_LINE
{
	CHANNEL = "data";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 55;
	TREE_LEVEL = 0;
	CHILDREN = 56, 57, 58, 59, 60, 61, 62, 63;
}

DISPLAY_LINE
{
	CHANNEL = "data[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "data[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "data[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "data[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "data[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "data[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "data[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "data[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "MSYN";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 64;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "SSYN";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 65;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "M_REQ";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 66;
	TREE_LEVEL = 0;
	CHILDREN = 67, 68, 69, 70;
}

DISPLAY_LINE
{
	CHANNEL = "M_REQ[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 66;
}

DISPLAY_LINE
{
	CHANNEL = "M_REQ[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 66;
}

DISPLAY_LINE
{
	CHANNEL = "M_REQ[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 66;
}

DISPLAY_LINE
{
	CHANNEL = "M_REQ[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 66;
}

DISPLAY_LINE
{
	CHANNEL = "perm";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 71;
	TREE_LEVEL = 0;
	CHILDREN = 72, 73, 74, 75;
}

DISPLAY_LINE
{
	CHANNEL = "perm[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "perm[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "perm[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "perm[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 71;
}

DISPLAY_LINE
{
	CHANNEL = "M_END";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 76;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Slave_add";
	EXPAND_STATUS = EXPANDED;
	RADIX = ASCII;
	TREE_INDEX = 77;
	TREE_LEVEL = 0;
	CHILDREN = 78, 79, 80;
}

DISPLAY_LINE
{
	CHANNEL = "Slave_add[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "Slave_add[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "Slave_add[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 77;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
